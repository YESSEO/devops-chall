name: Build Wazuh Docker Image

on:
  pull_request:
    types:
      - opened
    branches:
      - main

  workflow_dispatch:

jobs:
  build-docker-images:
    runs-on: self-hosted
    outputs:
      wazuh_base: ${{ steps.detect.outputs.wazuh_base }}
      wazuh_version: ${{ steps.detect.outputs.wazuh_version }}
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: pre-prod
          fetch-depth: 0
          clean: false

      - name: Detect submitted wazuh-docker folder
        id: detect
        run: |
          wazuh_base=$(find "$GITHUB_WORKSPACE" -maxdepth 2 -type d -name 'wazuh-docker-*' | head -n 1)

          if [ -z "$wazuh_base" ]; then
            echo "No wazuh-docker-* folder found in this PR."
            exit 1
          fi

          folder_name=$(basename "$wazuh_base")
          wazuh_version="${folder_name#wazuh-docker-}"

          echo "Detected folder: $wazuh_base"
          echo "Detected version: $wazuh_version"

          echo "wazuh_base=$wazuh_base" >> "$GITHUB_OUTPUT"
          echo "wazuh_version=$wazuh_version" >> "$GITHUB_OUTPUT"

      - name: Run build script
        working-directory: ${{ steps.detect.outputs.wazuh_base }}
        run: |
          /bin/bash build-docker-images/build-images.sh

  trivy-scan:
    runs-on: self-hosted
    needs: build-docker-images
    steps:
      - uses: actions/checkout@v4
        with:
          ref: pre-prod
          fetch-depth: 0
          clean: false

      - name: Trivy Scan - Wazuh Indexer
        run: |
          trivy image --scanners vuln wazuh/wazuh-indexer:${{ needs.build-docker-images.outputs.wazuh_version }} \
          --ignorefile "$GITHUB_WORKSPACE"/trivy/.trivyignore \
          --format json --output "$GITHUB_WORKSPACE"/reports/trivy/trivy-wazuh-indexer.json \


      - name: Trivy Scan - Wazuh Dashboard
        run: |
          trivy image --scanners vuln wazuh/wazuh-dashboard:${{ needs.build-docker-images.outputs.wazuh_version }} \
          --ignorefile "$GITHUB_WORKSPACE"/trivy/.trivyignore \
          --format json --output "$GITHUB_WORKSPACE"/reports/trivy/trivy-wazuh-dashboard.json


      - name: Trivy Scan - Wazuh Manager
        run: |
          trivy image --scanners vuln wazuh/wazuh-manager:${{ needs.build-docker-images.outputs.wazuh_version }} \
          --ignorefile "$GITHUB_WORKSPACE"/trivy/.trivyignore \
          --format json --output "$GITHUB_WORKSPACE"/reports/trivy/trivy-wazuh-manager.json


      - name: Trivy Scan - Wazuh Agent
        run: |
          trivy image --scanners vuln wazuh/wazuh-agent:${{ needs.build-docker-images.outputs.wazuh_version }} \
          --ignorefile "$GITHUB_WORKSPACE"/trivy/.trivyignore \
          --format json --output "$GITHUB_WORKSPACE"/reports/trivy/trivy-wazuh-agent.json

  deploy-test:
    runs-on: self-hosted
    needs: [build-docker-images, trivy-scan]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: pre-prod
          fetch-depth: 0
          clean: false

      - name: Compose up
        working-directory: ${{ needs.build-docker-images.outputs.wazuh_base }}/multi-node
        run: |
          docker compose -f generate-indexer-certs.yml run --rm generator && \
          docker compose up -d

  wait-dashboard-api:
    runs-on: self-hosted
    environment: staging
    needs: [deploy-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: pre-prod
          fetch-depth: 0
          clean: false

      - name: Wait for Dashboard & API to be ready
        working-directory: tests/selenium/
        run: |
          # Ensure script is executable
          chmod +x wazuh_init_check.sh
          # Run the initialization check
          ./wazuh_init_check.sh \
          --host 127.0.0.1 \
          --port1 443 \
          --port2 55000 \
          --max-retries 100 \
          --delay 20

  selenium-test_python:
    runs-on: self-hosted
    environment: staging
    needs: [wait-dashboard-api]
    env:
      WAZUH_URL: https://127.0.0.1
      WAZUH_USER: ${{ secrets.WAZUH_USER }}
      WAZUH_PASS: ${{ secrets.WAZUH_PASS }}
      API_URL: https://127.0.0.1:55000
      API_USER: ${{ secrets.API_USER }}
      API_PASS: ${{ secrets.API_PASS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: pre-prod
          fetch-depth: 0
          cealn: false
      - name: Run Selenium tests
        working-directory: tests/selenium/
        run: |
          # Ensure test script is executable
          chmod +x local_test.sh
          # Execute the tests
          ./local_test.sh
